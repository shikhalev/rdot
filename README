RDot v0.9.3 — GraphViz class diagrams for Ruby
	http://github.com/shikhalev/rdot/

Author: Ivan Shikhalev <shikhalev@gmail.com>
	http://github.com/shikhalev/
License: GNU General Public License, see COPYING
	http://www.gnu.org/licenses/gpl.html

Usage: rdot [options] <libs>

Options:
    -h, --help                       Show short help and exit.
    -I, --info=[INFO]                Show some program information and exit.
                                     Argument may by comma-separated set of:
                                         'about' — title with version
                                                    and homepage,
                                         'author' — author name with e-mail,
                                         'license' — license info,
                                         'usage' — command line arguments,
                                         'version' — current version;
                                     or one of predefined sets:
                                         'all' = 'about,author,license,usage',
                                         'help' = 'about,usage',
                                         'info' (or no argument) =
                                                       'about,author,license'.
        --about                      Show program title with version and exit.
        --author                     Show author information and exit.
    -L, --license                    Show license information and exit.
    -?, --usage                      Show command line arguments and exit.
    -V, --version                    Show version and exit.
    -x, -p, --exclude=LIBS           Comma-separated list of libraries
        --preload                    which must be excluded from output graph.
                                     This libs will be preloaded before start
                                     registering any changes like standard
                                     objects.
    -i, --include, --input=LIBS      Comma-separated list of libraries for
                                     processing. Also libs may be specified
                                     in command line without any key.
    -o, --output=[FILE]              Send output to file instead stdout.
                                     'rdot.dot' if no argument specified.
    -t, --title=TITLE                Set graph title.
    -f, --font=NAME                  Set font name.
    -F, --caption-font=NAME          Set caption fontname.
        --color-class=COLOR          Set class-node color. See:
                                     http://graphviz.org/doc/info/colors.html
        --color-class-preloaded=COLOR
                                     Set node color for preloaded classes.
        --color-class-evaluated=COLOR
                                     Set node color for evaluated classes.
        --color-exception=COLOR      Set node color for exception classes.
        --color-exception-preloaded=COLOR
                                     Set node color for preloaded exceptions.
        --color-exception-evaluated=COLOR
                                     Set node color for evaluated exceptions.
        --color-module=COLOR         Set node color for modules.
        --color-module-preloaded=COLOR
                                     Set node color for preloaded modules.
        --color-inherited=COLOR      Set inheritance-edge color.
        --color-included=COLOR       Set include-edge color.
        --color-extended=COLOR       Set extension-edge color.
        --color-protected=COLOR      Set color marker for protected methods.
        --color-private=COLOR        Set color marker for private methods.
    -s, --show-protected             Show public and protected methods.
    -S, --show-private               Show public, protected and private methods.
    -z, --show-preloaded             Show methods etc. for preloaded classes.
                                     Use this to see the structure of standard
                                     Ruby classes.
    -M, --hide-methods               Hide all methods from diagram.
    -C, --hide-constants             Hide all constants.
    -A, --hide-arguments             Hide method arguments.
    -r, --no-trace                   Don't use trace func.
                                     Use this if vizualized library make
                                     tracing itself.
    -e, --except=[LIST]              Except classes (with children) from
                                     processing. If no classes specified,
                                     the Exception will excepted.
    -v, --verbose=[LEVEL]            Verbosity level.
                                     none (0) or register (1) or scan (2).

Note:
	Use `RUBYOPT="" rdot smth' if yor have RubyGems installed.

Samples:
	see at http://github.com/shikhalev/rdot/downloads
